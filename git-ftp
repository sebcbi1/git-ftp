#!/bin/bash
#                          
# name		: git-ftp  
# author	: sebcbi1  
# version	: 0.3      
# created	: 2012-03-30
# modified	: 2012-04-04
#		   

author=$(git config --get user.name)
ftphost=$(git config --get ftp.host)
ftpuser=$(git config --get ftp.user)
ftppass=$(git config --get ftp.pass)
ftpcd=$(git config --get ftp.basedir)

tmpfile="./tmp/last-uploaded-revision"


# some checking ...

errors=false

if [[ `which lftp 2>/dev/null` = "" ]]; then
	echo "Please install lftp."
	errors=true
fi

if [[ "$author" = "" ]]; then
	echo "Please set your git user.name variable."
	errors=true
fi

if [[ "$ftphost" = "" ]]; then
        echo "Please set your git ftp.host variable."
        errors=true
fi

if [[ "$ftpuser" = "" ]]; then
        echo "Please set your git ftp.user variable."
        errors=true
fi

if $errors; then
	exit
fi;

if [[ "$ftppass" = "" ]]; then
	echo -n "Enter FTP password: "
	stty -echo
	read ftppass
	stty echo
	echo ""
fi

if [[ "$ftppass" = "" ]]; then
	echo "Aborting"
	errors=true
fi

if $errors; then
	exit
fi;

# Retrieving last user commit 

commit=$(git log -1 --author="$author" | sed -n 1p | sed -e 's/commit //')
descr=$(git log $commit --oneline | sed -n 1p)
files=$(git show $commit --pretty="format:" --name-only | sed '/^$/d')

if [[ "$files" = "" ]]; then

	echo "Revision '$descr' has no modified files"
	echo "Maybe an empty merge, trying the previous one ..."
	commit=$(git log -1 --skip=1 --author="$author" | sed -n 1p | sed -e 's/commit //')
	files=$(git show $commit --pretty="format:" --name-only | sed '/^$/d')
	descr=$(git log $commit --oneline | sed -n 1p)

fi


if [[ "$commit" = "" || "$files" = "" ]]; then
	
	echo "Nothing to upload"

else

	# Check if already uploaded

	if [[ -e $tmpfile ]]; then
		lastupload=$(cat $tmpfile)
		if [[ $lastupload = $commit ]]; then
			echo "Revision '$descr' already uploaded."
			echo -n "Do you wish to re-upload files ? (y/N) "
			read a
			if [[ ($a != "y") && ($a != "Y") ]]; then
				exit
			fi
		fi
	fi
	
	
	# base directory

	ftpcmds=""

	if [[ "$ftpcd" != "" ]]; then
		ftpcmds="cd $ftpcd\n"
	fi

	# Building file list from last commit of user

	echo "Revision '$descr' will be uploaded."
	echo 


	for i in `git show $commit --pretty="format:" --name-only | sed '/^$/d'|sort|uniq`; 
	do
		if [[ -e $i ]]; then
			echo "$i"
			ftpcmds=$ftpcmds"mput $ftpbase -d $i\n"
		fi
	done

	echo
	echo -n "Continue ? (y/N) "
	read a
	if [[ ($a != "y") && ($a != "Y") ]]; then
		exit
	fi
	
	# Uploading to ftp

lftp -u $ftpuser,$ftppass $ftphost <<EOF
`echo -e $ftpcmds`
quit 0
EOF
	
	# Saving tranferred commit
	
	echo $commit > $tmpfile

fi
